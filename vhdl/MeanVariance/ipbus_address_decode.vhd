-- Address decode logic for ipbus fabric
-- 
-- This file has been AUTOGENERATED from the address table - do not hand edit
-- 
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
-- 
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;

package ipbus_address_decode is

  constant IPBUS_SEL_WIDTH: positive := 3;
  subtype ipbus_sel_t is std_logic_vector(IPBUS_SEL_WIDTH - 1 downto 0);
  function ipbus_sel_address(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t;

-- START automatically generated VHDL (Fri Jan 20 13:22:45 2023)
  constant N_SLV_CSR: integer := 0;
  constant N_SLV_RAM_INTEGRAL: integer := 1;
  constant N_SLV_RAM_ERROR: integer := 2;
  constant N_SLV_RAM_TIMING: integer := 3;
  constant N_SLAVES: integer := 4;
-- END automatically generated VHDL

    
end ipbus_address_decode;

package body ipbus_address_decode is

  function ipbus_sel_address(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t is
    variable sel: ipbus_sel_t;
  begin

-- START automatically generated VHDL (Fri Jan 20 13:22:45 2023)
    if    std_match(addr, "-------------000--0-------------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CSR, IPBUS_SEL_WIDTH)); -- csr / base 0x00000000 / mask 0x00072000
    elsif std_match(addr, "-------------000--1-------------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_RAM_INTEGRAL, IPBUS_SEL_WIDTH)); -- ram_param0_in / base 0x00002000 / mask 0x00072000
    elsif std_match(addr, "-------------001--1-------------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_RAM_ERROR, IPBUS_SEL_WIDTH)); -- ram_param1_in / base 0x00012000 / mask 0x00072000
    elsif std_match(addr, "-------------010--1-------------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_RAM_TIMING, IPBUS_SEL_WIDTH)); -- ram_edge_in / base 0x00022000 / mask 0x00072000
-- END automatically generated VHDL

    else
      sel := ipbus_sel_t(to_unsigned(N_SLAVES, IPBUS_SEL_WIDTH));
    end if;
    
    return sel;
    
  end function ipbus_sel_address;
  
end ipbus_address_decode;
                          
